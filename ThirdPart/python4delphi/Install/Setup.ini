; The package order in the Ini file IS relevant.
; Packages format:
; [Package - packagename]
; Name = description
; Git = git_to_be_cloned
; Zip = zip file
; Folder = folder name
; SearchPath = directories in the zip folder structure to be added to the search paths.
;              The strings must be enclosed by double quotes and separated by comma.
;              If ommited the components root folder is used.
;              Examples:
;              SearchPath =
;              SearchPath = Source
;              SearchPath = "Source1", "Source2"
;              SearchPath = "", "Source1", "Source2"
;              Here the empty string represents the root folder.
; Includes = includes directories
;            The strings must be enclosed by double quotes and separated by comma.
;            For example: "c:\include1", "c:\include2"
;            Can be omitted if no include files are used by the package. 
;            $BaseFolder can be used to represent the components destination folder.
; D* = packages in the zip folder structure, where * represents the IDE version.
;      The strings must be enclosed by double quotes and separated by comma.
;      The runtime packages must be placed before the designtime packages.
;      For example: "Packages\MyCompos_d10.dpk", "Packages\MyComposDesign_d10.dpk"
; Installable = 0 if the package is not installable
;               1 if the package needs to be installed
;               2 if the package is not installable but needs to add the SearchPath
;                 to the registry, this is useful when installing utility libraries 
;                 that doesn't have components to install, for example GraphicEx, 
;                 GDI+, DirectX, etc
;               If omitted the default value is 1
; LibSuffix = %s
;               ActualLibSuffix is assumed to be Format(LibSuffix, [DelphiIDEVersion])
;               Useful when LibSuffix is specified in package file using conditional directives
; GroupIndex = used to group the component packages, can be omitted
;
; ExecuteList entry format:
; ExecuteCount = number of execute entries
; Execute[index] = "Action", "Origin", "Destination"
; Commas are not optional
; Action can be "copy", "copyandrun" and "delete"
; Origin is the file or directory to copy or delete
; Destination is the destination folder
; When Action is "copyandrun" the file will be copied and run from the destination.
; $BaseFolder is the components destination folder

[Package - Python4Delphi]
Name=Python4Delphi
Folder=P4D
SearchPath="Source"
LibSuffix=%s0
D27="Packages\Delphi\Delphi 10.4+\Python.dpk", "Packages\Delphi\Delphi 10.4+\dclPython.dpk"
D28="Packages\Delphi\Delphi 10.4+\Python.dpk", "Packages\Delphi\Delphi 10.4+\dclPython.dpk"

[Package - Python4DelphiVcl]
Name=Python4Delphi Vcl
Folder=P4D
SearchPath="Source\Vcl"
LibSuffix=%s0
D27="Packages\Delphi\Delphi 10.4+\PythonVcl.dpk", "Packages\Delphi\Delphi 10.4+\dclPythonVcl.dpk"
D28="Packages\Delphi\Delphi 10.4+\PythonVcl.dpk", "Packages\Delphi\Delphi 10.4+\dclPythonVcl.dpk"

[Package - Python4DelphiFmx]
Name=Python4Delphi Fmx 
Folder=P4D
SearchPath="Source\Fmx"
LibSuffix=%s0
D27="Packages\Delphi\Delphi 10.4+\PythonFmx.dpk", "Packages\Delphi\Delphi 10.4+\dclPythonFmx.dpk"
D28="Packages\Delphi\Delphi 10.4+\PythonFmx.dpk", "Packages\Delphi\Delphi 10.4+\dclPythonFmx.dpk"

; Options format:
; [Options]
; MinimumIDEVersion =    Minimum Delphi IDE version that is supported by the packages.
; DefaultInstallFolder = Default install folder that should be selected to install.
; DefaultInstallIDE =    Default Delphi IDE version that should be selected to install.
;
; When both DefaultInstallIDE and DefaultInstallFolder are set the installer starts automatically.

[Options]
MinimumIDEVersion=D27